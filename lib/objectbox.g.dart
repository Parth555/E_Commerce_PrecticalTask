// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'database/cart_model.dart';
import 'database/order_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 8656759365649583362),
      name: 'CartItem',
      lastPropertyId: const obx_int.IdUid(15, 3457667169946118074),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 841385591258862829),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4429494641882228059),
            name: 'itemId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 674060321698478346),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2391024123905382604),
            name: 'price',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4987491054527371144),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2821493916044170052),
            name: 'category',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 3051891711201440732),
            name: 'image',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 6162687300343642014),
            name: 'rate',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 7696178860235806238),
            name: 'rateCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 274860593479853237),
            name: 'itemCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 3376967227896293294),
            name: 'selectedColor',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 5867037116814045191),
            name: 'selectedSize',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 8687629572305226706),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 5768476941690533883),
            name: 'orderId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 3457667169946118074),
            name: 'isConformed',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 380352333401334859),
      name: 'OrderModelItem',
      lastPropertyId: const obx_int.IdUid(3, 6949561349260348638),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5274426523059755836),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 48135809994959120),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6949561349260348638),
            name: 'isConformed',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(3, 380352333401334859),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [3698347108550870071],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        88496613721608535,
        4129137037982847206,
        4156438950576363873,
        1794022715580024959
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    CartItem: obx_int.EntityDefinition<CartItem>(
        model: _entities[0],
        toOneRelations: (CartItem object) => [],
        toManyRelations: (CartItem object) => {},
        getId: (CartItem object) => object.id,
        setId: (CartItem object, int id) {
          object.id = id;
        },
        objectToFB: (CartItem object, fb.Builder fbb) {
          final titleOffset =
              object.title == null ? null : fbb.writeString(object.title!);
          final descriptionOffset = object.description == null
              ? null
              : fbb.writeString(object.description!);
          final categoryOffset = object.category == null
              ? null
              : fbb.writeString(object.category!);
          final imageOffset =
              object.image == null ? null : fbb.writeString(object.image!);
          fbb.startTable(16);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.itemId);
          fbb.addOffset(2, titleOffset);
          fbb.addFloat64(3, object.price);
          fbb.addOffset(4, descriptionOffset);
          fbb.addOffset(5, categoryOffset);
          fbb.addOffset(6, imageOffset);
          fbb.addFloat64(7, object.rate);
          fbb.addInt64(8, object.rateCount);
          fbb.addInt64(9, object.itemCount);
          fbb.addInt64(10, object.selectedColor);
          fbb.addInt64(11, object.selectedSize);
          fbb.addInt64(12, object.date.millisecondsSinceEpoch);
          fbb.addInt64(13, object.orderId);
          fbb.addInt64(14, object.isConformed);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final itemIdParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final priceParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 10);
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 12);
          final categoryParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final imageParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final rateParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 18);
          final rateCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 20);
          final itemCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 22);
          final selectedColorParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 24);
          final selectedSizeParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 26);
          final orderIdParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 30);
          final isConformedParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 32);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0));
          final object = CartItem(
              id: idParam,
              itemId: itemIdParam,
              title: titleParam,
              price: priceParam,
              description: descriptionParam,
              category: categoryParam,
              image: imageParam,
              rate: rateParam,
              rateCount: rateCountParam,
              itemCount: itemCountParam,
              selectedColor: selectedColorParam,
              selectedSize: selectedSizeParam,
              orderId: orderIdParam,
              isConformed: isConformedParam,
              date: dateParam);

          return object;
        }),
    OrderModelItem: obx_int.EntityDefinition<OrderModelItem>(
        model: _entities[1],
        toOneRelations: (OrderModelItem object) => [],
        toManyRelations: (OrderModelItem object) => {},
        getId: (OrderModelItem object) => object.id,
        setId: (OrderModelItem object, int id) {
          object.id = id;
        },
        objectToFB: (OrderModelItem object, fb.Builder fbb) {
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.date.millisecondsSinceEpoch);
          fbb.addInt64(2, object.isConformed);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final isConformedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
          final object = OrderModelItem(
              id: idParam, isConformed: isConformedParam, date: dateParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [CartItem] entity fields to define ObjectBox queries.
class CartItem_ {
  /// See [CartItem.id].
  static final id =
      obx.QueryIntegerProperty<CartItem>(_entities[0].properties[0]);

  /// See [CartItem.itemId].
  static final itemId =
      obx.QueryIntegerProperty<CartItem>(_entities[0].properties[1]);

  /// See [CartItem.title].
  static final title =
      obx.QueryStringProperty<CartItem>(_entities[0].properties[2]);

  /// See [CartItem.price].
  static final price =
      obx.QueryDoubleProperty<CartItem>(_entities[0].properties[3]);

  /// See [CartItem.description].
  static final description =
      obx.QueryStringProperty<CartItem>(_entities[0].properties[4]);

  /// See [CartItem.category].
  static final category =
      obx.QueryStringProperty<CartItem>(_entities[0].properties[5]);

  /// See [CartItem.image].
  static final image =
      obx.QueryStringProperty<CartItem>(_entities[0].properties[6]);

  /// See [CartItem.rate].
  static final rate =
      obx.QueryDoubleProperty<CartItem>(_entities[0].properties[7]);

  /// See [CartItem.rateCount].
  static final rateCount =
      obx.QueryIntegerProperty<CartItem>(_entities[0].properties[8]);

  /// See [CartItem.itemCount].
  static final itemCount =
      obx.QueryIntegerProperty<CartItem>(_entities[0].properties[9]);

  /// See [CartItem.selectedColor].
  static final selectedColor =
      obx.QueryIntegerProperty<CartItem>(_entities[0].properties[10]);

  /// See [CartItem.selectedSize].
  static final selectedSize =
      obx.QueryIntegerProperty<CartItem>(_entities[0].properties[11]);

  /// See [CartItem.date].
  static final date =
      obx.QueryDateProperty<CartItem>(_entities[0].properties[12]);

  /// See [CartItem.orderId].
  static final orderId =
      obx.QueryIntegerProperty<CartItem>(_entities[0].properties[13]);

  /// See [CartItem.isConformed].
  static final isConformed =
      obx.QueryIntegerProperty<CartItem>(_entities[0].properties[14]);
}

/// [OrderModelItem] entity fields to define ObjectBox queries.
class OrderModelItem_ {
  /// See [OrderModelItem.id].
  static final id =
      obx.QueryIntegerProperty<OrderModelItem>(_entities[1].properties[0]);

  /// See [OrderModelItem.date].
  static final date =
      obx.QueryDateProperty<OrderModelItem>(_entities[1].properties[1]);

  /// See [OrderModelItem.isConformed].
  static final isConformed =
      obx.QueryIntegerProperty<OrderModelItem>(_entities[1].properties[2]);
}
